apiVersion: skaffold/v2beta28
kind: Config
metadata:
  name: react-template
profiles: 
- name: dev
  build:
    artifacts:
      - image: registry.codeopensrc.com/os/react-template/app
        context: .
        docker:
          target: src
          buildArgs:
            BASE_IMAGE: alpine
            BASE_IMAGE_TAG: 3.14
            NODE_VER: 14.19.0-r0
            NPM_VER: 7.17.0-r0
            PM2_VER: 5.1.1
        sync:
          manual:
            - src: "src/**"
              dest: /home/app
            - src: "server/**"
              dest: /home/app
            - src: "docker-compose.yml"
              dest: /home/app
  deploy:
    helm:
      releases:
      - name: mongo
        namespace: react
        createNamespace: true
        chartPath: helmchart
        overrides:
          replicaCount: 1
          image:
            repository: mongo
            pullPolicy: IfNotPresent
            tag: 4.4.6
          #command: ["mongod", "-f", "/etc/mongo/mongod.conf"]
          service:
            ports:
              - servicePort: 27017
                targetContainerPortName: mongo
          ingress:
            enabled: false
          containerPorts: 
            - name: mongo
              port: 27017
          containerProbe: ""
          useStatefulSet: true
          volumeClaimMounts:
            - mountPath: /data/db
              subPath: db
          secretStringData:
            MONGO_INITDB_DATABASE: mongo
          configMapData: {}
        imageStrategy:
          helm: {}
      - name: react-template
        namespace: react
        createNamespace: true
        chartPath: helmchart
        artifactOverrides:
          image: registry.codeopensrc.com/os/react-template/app
        overrides:
          replicaCount: 1
          image:
            pullPolicy: IfNotPresent
          service:
            ports:
              - servicePort: 80
                targetContainerPortName: http
              - servicePort: 5055
                targetContainerPortName: reloader
          containerPorts: 
            - name: http
              port: 80
            - name: reloader
              port: 5055
          lifecyclePostStartCommand:
            ["sh", "-c", "npm run reloader > /var/log/hotreload.log &"]
          volumeMounts:
            - name: shared-logs
              mountPath: /var/log
              mountType: 
                emptyDir: {}
          additionalContainers:
            - name: hotreload-logger
              image: busybox
              command: ["sh", "-c", 
                "while [ ! -f /var/log/hotreload.log ]; do sleep 1; done; \
                 tail -f /var/log/hotreload.log"
              ]
              volumeMounts:
                - name: shared-logs
                  mountPath: /var/log
          createFileConfigMaps: []
        imageStrategy:
          helm: {}
        setFiles:
          dotEnvFile: .env
        setValues:
          configMapData.DEV_DATABASE_URL_ORIGIN: "mongodb://mongo-react:27017"
          configMapData.LOG_EVERY_NUM_CHECKS: 5
          configMapData.DEV_ENV:   "true"
          configMapData.ENABLE_DB: "true"
          configMapData.LIVE_RELOADER_PORT: 5055
