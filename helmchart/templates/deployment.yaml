apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "react-template.fullname" . }}
  labels:
    {{- include "react-template.labels" . | nindent 4 }}
    {{- with .Values.ciLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.configMapData }}
    configHash: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- end }}
    {{- range .Values.createAndAttachExtraConfigMaps }}
    {{ .name }}Hash: {{ include (print $.Template.BasePath "/auxConfigmap.yaml") $ | sha256sum }}
    {{- end }}
    {{- range .Values.attachExtraConfigMaps }}
    {{- if (lookup "v1" "ConfigMap" $.Release.Namespace .name) }}
    {{ .name }}Hash: {{ (lookup "v1" "ConfigMap" $.Release.Namespace .name).data | toString | sha256sum }}
    {{- end }}
    {{- end }}
    {{- if .Values.secretStringData }}
    secretHash: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    {{- end }}
    {{- if .Values.dotEnvFile }}
    dotEnvFileHash: {{ include (print $.Template.BasePath "/dotEnvSecret.yaml") . | sha256sum }}
    {{- end }}
    {{- range .Values.createAndAttachExtraSecrets }}
    {{ .name }}Hash: {{ include (print $.Template.BasePath "/auxSecret.yaml") $ | sha256sum }}
    {{- end }}
    {{- range .Values.attachExtraSecrets }}
    {{- if (lookup "v1" "Secret" $.Release.Namespace .name) }}
    {{ .name }}Hash: {{ (lookup "v1" "Secret" $.Release.Namespace .name).stringData | toString | sha256sum }}
    {{- end }}
    {{- end }}
    {{- with .Values.ciAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "react-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "react-template.selectorLabels" . | nindent 8 }}
        {{- with .Values.ciLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.configMapData }}
        configHash: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- range .Values.createAndAttachExtraConfigMaps }}
        {{ .name }}Hash: {{ include (print $.Template.BasePath "/auxConfigmap.yaml") $ | sha256sum }}
        {{- end }}
        {{- range .Values.attachExtraConfigMaps }}
        {{- if (lookup "v1" "ConfigMap" $.Release.Namespace .name) }}
        {{ .name }}Hash: {{ (lookup "v1" "ConfigMap" $.Release.Namespace .name).data | toString | sha256sum }}
        {{- end }}
        {{- end }}
        {{- if .Values.secretStringData }}
        secretHash: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.dotEnvFile }}
        dotEnvFileHash: {{ include (print $.Template.BasePath "/dotEnvSecret.yaml") . | sha256sum }}
        {{- end }}
        {{- range .Values.createAndAttachExtraSecrets }}
        {{ .name }}Hash: {{ include (print $.Template.BasePath "/auxSecret.yaml") $ | sha256sum }}
        {{- end }}
        {{- range .Values.attachExtraSecrets }}
        {{- if (lookup "v1" "Secret" $.Release.Namespace .name) }}
        {{ .name }}Hash: {{ (lookup "v1" "Secret" $.Release.Namespace .name).stringData | toString | sha256sum }}
        {{- end }}
        {{- end }}
        {{- with .Values.ciAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "react-template.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                {{- $selectorLabelList := regexSplit "\n" (include "react-template.selectorLabels" .) -1 }}
                {{- range $ind, $label := $selectorLabelList }}
                - key: {{ regexSplit ":" $label -1 | first | trim }}
                  operator: In
                  values:
                  - {{ regexSplit ":" $label -1 | last | trim }}
                {{- end }}
              topologyKey: "kubernetes.io/hostname"
            weight: 100
      containers:
        - name: {{ include "react-template.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.containerPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ default "/" .Values.containerProbe.path }}
              port: http
              {{- with .Values.containerProbe.httpHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            failureThreshold: 50
          readinessProbe:
            httpGet:
              path: {{ default "/" .Values.containerProbe.path }}
              port: http
              {{- with .Values.containerProbe.httpHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            initialDelaySeconds: 5
          envFrom:
            {{- if .Values.secretStringData }}
            - secretRef:
                name: {{ include "react-template.fullname" . }}
            {{- end }}
            {{- range concat .Values.createAndAttachExtraSecrets .Values.attachExtraSecrets }}
            - secretRef:
                name: {{ .name }}
            {{- end }}
            {{- if .Values.configMapData }}
            - configMapRef:
                name: {{ include "react-template.fullname" . }}
            {{- end }}
            {{- range concat .Values.createAndAttachExtraConfigMaps .Values.attachExtraConfigMaps }}
            - configMapRef:
                name: {{ .name }}
            {{- end }}
            {{- if .Values.dotEnvFile }}
            - secretRef:
                name: {{ include "react-template.fullname" . }}-dotenv
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.lifecyclePostStartCommand }}
          lifecycle:
            postStart:
              exec:
                command: 
                  {{- toYaml .Values.lifecyclePostStartCommand | nindent 18 }}
          {{- end }}
          {{- range .Values.volumeMounts }}
          volumeMounts:
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
        {{- range .Values.additionalContainers }}
        - name: {{ .name}}
          image: {{ .image }}
          command: 
            {{- toYaml .command | nindent 12 }}
          {{- range .volumeMounts }}
          volumeMounts:
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
        {{- end }}
      {{- range .Values.volumeMounts }}
      volumes:
        - name: {{ .name  }}
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
